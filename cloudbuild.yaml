steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', 
      '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME', 
      '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME',
      '.' ]
    env:
      - "_ANALYTICS_ID=$_ANALYTICS_ID"
      - "_CLARITY_ID=$_CLARITY_ID"
      - "_INLIVE_API=$_INLIVE_API"
      - "_INLIVE_STUDIO_ORIGIN=$_INLIVE_STUDIO_ORIGIN"
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$BUILD_ID']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME']
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: 
      - '-c'
      - |
        sed -i "s#@BUILD_ID@#$BUILD_ID#g; s#@BRANCH_NAME@#$BRANCH_NAME#g" k8s/development/inlive-website.yaml
  # Deploy container image to Cloud Run
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
    - run
    - --filename=k8s/development/inlive-website.yaml
    - --location=asia-southeast2
    - --cluster=inlive-cluster
    - --output=output/inlive-website
    timeout: 900s
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
    - run
    - --filename=k8s/development/ingress-service.yaml
    - --location=asia-southeast2
    - --cluster=inlive-cluster
    - --output=output/ingress-service
    timeout: 900s
images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME:$BUILD_ID',
  'gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME',
]
